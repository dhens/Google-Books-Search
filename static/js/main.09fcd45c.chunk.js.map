{"version":3,"sources":["assets/no_image_placeholder.jpg","assets/GoogleBooksSearch.jpg","components/Header/Header.js","components/SearchBar/SearchBar.js","components/BookCard/BookCard.js","components/BookList/BookList.js","components/BookSearch/BookSearch.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","id","src","TitleImage","SearchBar","props","className","onSubmit","searchBook","action","onChange","handleSearch","type","BookCard","style","width","image","alt","title","description","author","published","href","link","BookList","books","map","book","i","components_BookCard_BookCard","key","volumeInfo","imageLinks","smallThumbnail","authors","publishedDate","infoLink","_unused","errorimg","BookSearch","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","request","get","query","q","state","searchField","then","data","console","log","setState","toConsumableArray","body","items","target","value","cleanData","hasOwnProperty","thunbnail","NoImage","components_SearchBar_SearchBar","components_BookList_BookList","Component","App","components_Header_Header","components_BookSearch_BookSearch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.09fcd45c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image_placeholder.e45ebaa0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GoogleBooksSearch.acfa8fa7.jpg\";","import React from \"react\";\nimport TitleImage from \"../../assets/GoogleBooksSearch.jpg\";\nimport \"./style.css\";\n\nconst Header = () => {\n    return(\n        <header>\n        <h1 id=\"headerText\">The Best Looking Book Site Ever</h1>\n        <img id=\"header_image\" src={TitleImage} />\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchBar = (props) => {\n    return(\n        <div className=\"search-bar\">\n            <form onSubmit={props.searchBook} action=\"\">\n                <input id=\"searchBar\" onChange={props.handleSearch} type=\"text\" />\n                <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport \"./style.css\";\n\nconst BookCard = (props) => {\n    return(\n        <div className=\"card border-0\" style={{width: \"18rem\"}}>\n  <img src={props.image} className=\"card-img-top\" alt=\"...\" />\n  <div className=\"card-body text-center\">\n    <h5 className=\"card-title\">{props.title}</h5>\n    <p className=\"desc card-text text-justify\">{props.description}</p>\n  </div>\n  <ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Author:{props.author}</li>\n    <li className=\"list-group-item\">Published:{props.published}</li>\n  </ul>\n  <div className=\"card-body\">\n    <a href={props.link} className=\"card-link btn btn-info\">Learn More</a>\n  </div>\n</div>\n        \n    )\n}\n\nexport default BookCard;","import React from \"react\";\nimport \"./style.css\";\nimport BookCard from \"../BookCard/BookCard.js\"\nimport errorimg from '../../assets/no_image_placeholder.jpg'\n\nconst BookList = (props) => {\n    try {\n        return (\n            <div className=\"container mt-4\">\n                <div className=\"row justify-content-center\">\n                    {\n                        props.books.map((book, i) => {\n                            return <BookCard\n                                key={i}\n                                image={book.volumeInfo.imageLinks.smallThumbnail}\n                                title={book.volumeInfo.title}\n                                author={book.volumeInfo.authors}\n                                description={book.volumeInfo.description}\n                                published={book.volumeInfo.publishedDate}\n                                link={book.volumeInfo.infoLink}\n                            />\n                        })\n                    }\n                </div></div>\n        )\n    }\n    catch{\n        return (\n            <div className=\"container mt-4\">\n                <div className=\"row justify-content-center\">\n                    {\n                        props.books.map((book, i) => {\n                            return <BookCard\n                                key={i}\n                                image={errorimg}\n                                title={book.volumeInfo.title}\n                                author={book.volumeInfo.authors}\n                                description={book.volumeInfo.description}\n                                published={book.volumeInfo.publishedDate}\n                                link={book.volumeInfo.infoLink}\n                            />\n                        })\n                    }\n                </div></div>\n        )\n    }\n\n}\n\nexport default BookList;","import React, { Component } from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar.js\";\nimport BookList from \"../BookList/BookList.js\";\nimport NoImage from \"../../assets/no_image_placeholder.jpg\";\nimport request from \"superagent\";\nimport \"./style.css\"\n\n\nclass BookSearch extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            books: [],\n            searchField: \"\"\n        }\n    }\n\n    searchBook = (event) => {\n        event.preventDefault();\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\n            .query({ q: this.state.searchField })\n            .then((data) => {\n                console.log(data);\n                this.setState({ books: [...data.body.items] })\n        })\n    }\n\n    handleSearch = (event) => {\n        this.setState({ searchField: event.target.value})\n        console.log(event.target.value)\n    }\n \n    \n\n    cleanData = (data) => {\n        const cleanedData = data.body.items.map((book) => {\n            if(book.volumeInfo.hasOwnProperty['publishedDate'] === false){\n                book.volumeInfo['publishedDate'] = '0000';\n            }\n            else if (book.volumeInfo.hasOwnProperty['imageLinks'] === false) {\n                book.volumeInfo['imageLinks'] = { thunbnail: {NoImage}}\n            }\n\n            return book;\n        })\n\n        return cleanedData;\n    }\n\n    render() {\n      return (\n        <div id=\"container\">\n          <SearchBar searchBook={this.searchBook} handleSearch={this.handleSearch} />\n          <BookList books={this.state.books} />\n        </div>\n      );\n    }\n  } \n  \n  export default BookSearch;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header.js\"\nimport BookSearch from \"./components/BookSearch/BookSearch.js\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <BookSearch />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}